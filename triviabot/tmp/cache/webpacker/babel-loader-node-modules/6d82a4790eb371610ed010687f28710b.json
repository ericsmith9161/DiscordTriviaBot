{"ast":null,"code":"'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Emoji = require('./Emoji');\n/**\n * Parent class for {@link GuildEmoji} and {@link GuildPreviewEmoji}.\n * @extends {Emoji}\n */\n\n\nvar BaseGuildEmoji = /*#__PURE__*/function (_Emoji) {\n  _inherits(BaseGuildEmoji, _Emoji);\n\n  var _super = _createSuper(BaseGuildEmoji);\n\n  function BaseGuildEmoji(client, data, guild) {\n    var _this;\n\n    _classCallCheck(this, BaseGuildEmoji);\n\n    _this = _super.call(this, client, data);\n    /**\n     * The guild this emoji is a part of\n     * @type {Guild|GuildPreview}\n     */\n\n    _this.guild = guild;\n    /**\n     * Array of role ids this emoji is active for\n     * @name BaseGuildEmoji#_roles\n     * @type {Snowflake[]}\n     * @private\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), '_roles', {\n      value: [],\n      writable: true\n    });\n\n    _this._patch(data);\n\n    return _this;\n  }\n\n  _createClass(BaseGuildEmoji, [{\n    key: \"_patch\",\n    value: function _patch(data) {\n      if (data.name) this.name = data.name;\n      /**\n       * Whether or not this emoji requires colons surrounding it\n       * @type {boolean}\n       * @name GuildEmoji#requiresColons\n       */\n\n      if (typeof data.require_colons !== 'undefined') this.requiresColons = data.require_colons;\n      /**\n       * Whether this emoji is managed by an external service\n       * @type {boolean}\n       * @name GuildEmoji#managed\n       */\n\n      if (typeof data.managed !== 'undefined') this.managed = data.managed;\n      /**\n       * Whether this emoji is available\n       * @type {boolean}\n       * @name GuildEmoji#available\n       */\n\n      if (typeof data.available !== 'undefined') this.available = data.available;\n      if (data.roles) this._roles = data.roles;\n    }\n  }]);\n\n  return BaseGuildEmoji;\n}(Emoji);\n\nmodule.exports = BaseGuildEmoji;","map":null,"metadata":{},"sourceType":"module"}