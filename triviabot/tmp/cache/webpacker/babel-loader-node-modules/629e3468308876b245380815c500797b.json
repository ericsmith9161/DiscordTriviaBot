{"ast":null,"code":"'use strict';\n\nvar _require = require('../../../util/Constants'),\n    Events = _require.Events;\n\nmodule.exports = function (client, _ref) {\n  var data = _ref.d;\n  var channel = client.channels.cache.get(data.channel_id);\n  var user = client.users.cache.get(data.user_id);\n  var timestamp = new Date(data.timestamp * 1000);\n\n  if (channel && user) {\n    if (channel.type === 'voice') {\n      client.emit(Events.WARN, \"Discord sent a typing packet to a voice channel \".concat(channel.id));\n      return;\n    }\n\n    if (channel._typing.has(user.id)) {\n      var typing = channel._typing.get(user.id);\n\n      typing.lastTimestamp = timestamp;\n      typing.elapsedTime = Date.now() - typing.since;\n      client.clearTimeout(typing.timeout);\n      typing.timeout = tooLate(channel, user);\n    } else {\n      var since = new Date();\n      var lastTimestamp = new Date();\n\n      channel._typing.set(user.id, {\n        user: user,\n        since: since,\n        lastTimestamp: lastTimestamp,\n        elapsedTime: Date.now() - since,\n        timeout: tooLate(channel, user)\n      });\n      /**\n       * Emitted whenever a user starts typing in a channel.\n       * @event Client#typingStart\n       * @param {Channel} channel The channel the user started typing in\n       * @param {User} user The user that started typing\n       */\n\n\n      client.emit(Events.TYPING_START, channel, user);\n    }\n  }\n};\n\nfunction tooLate(channel, user) {\n  return channel.client.setTimeout(function () {\n    channel._typing[\"delete\"](user.id);\n  }, 10000);\n}","map":null,"metadata":{},"sourceType":"module"}