{"ast":null,"code":"'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Channel = require('./Channel');\n\nvar _require = require('../errors'),\n    Error = _require.Error;\n/**\n * Represents a Partial Group DM Channel on Discord.\n * @extends {Channel}\n */\n\n\nvar PartialGroupDMChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(PartialGroupDMChannel, _Channel);\n\n  var _super = _createSuper(PartialGroupDMChannel);\n\n  function PartialGroupDMChannel(client, data) {\n    var _this;\n\n    _classCallCheck(this, PartialGroupDMChannel);\n\n    _this = _super.call(this, client, data);\n    /**\n     * The name of this Group DM Channel\n     * @type {string}\n     */\n\n    _this.name = data.name;\n    /**\n     * The hash of the channel icon\n     * @type {?string}\n     */\n\n    _this.icon = data.icon;\n    return _this;\n  }\n  /**\n   * The URL to this channel's icon.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n\n\n  _createClass(PartialGroupDMChannel, [{\n    key: \"iconURL\",\n    value: function iconURL() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          format = _ref.format,\n          size = _ref.size;\n\n      if (!this.icon) return null;\n      return this.client.rest.cdn.GDMIcon(this.id, this.icon, format, size);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return Promise.reject(new Error('DELETE_GROUP_DM_CHANNEL'));\n    }\n  }, {\n    key: \"fetch\",\n    value: function fetch() {\n      return Promise.reject(new Error('FETCH_GROUP_DM_CHANNEL'));\n    }\n  }]);\n\n  return PartialGroupDMChannel;\n}(Channel);\n\nmodule.exports = PartialGroupDMChannel;","map":null,"metadata":{},"sourceType":"module"}